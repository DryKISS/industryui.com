(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{4184:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);let context,AudioContext=window.AudioContext||window.webkitAudioContext,error=method=>{let event=new Event("error");return event.data=new Error("Wrong state for "+method),event};class MediaRecorder{constructor(stream,config=null){this.stream=stream,this.config=config,this.state="inactive",this.em=document.createDocumentFragment(),this.encoder=(fn=>{let js=fn.toString().replace(/^(\(\)\s*=>|function\s*\(\))\s*{/,"").replace(/}$/,""),blob=new Blob([js]);return new Worker(URL.createObjectURL(blob))})(MediaRecorder.encoder);let recorder=this;this.encoder.addEventListener("message",e=>{let event=new Event("dataavailable");event.data=new Blob([e.data],{type:recorder.mimeType}),recorder.em.dispatchEvent(event),"inactive"===recorder.state&&recorder.em.dispatchEvent(new Event("stop"))})}start(timeslice){if("inactive"!==this.state)return this.em.dispatchEvent(error("start"));this.state="recording",context||(context=new AudioContext(this.config)),this.clone=this.stream.clone(),this.input=context.createMediaStreamSource(this.clone),this.processor=context.createScriptProcessor(2048,1,1),this.encoder.postMessage(["init",context.sampleRate]),this.processor.onaudioprocess=e=>{"recording"===this.state&&this.encoder.postMessage(["encode",e.inputBuffer.getChannelData(0)])},this.input.connect(this.processor),this.processor.connect(context.destination),this.em.dispatchEvent(new Event("start")),timeslice&&(this.slicing=setInterval(()=>{"recording"===this.state&&this.requestData()},timeslice))}stop(){return"inactive"===this.state?this.em.dispatchEvent(error("stop")):(this.requestData(),this.state="inactive",this.clone.getTracks().forEach(track=>{track.stop()}),this.processor.disconnect(),this.input.disconnect(),clearInterval(this.slicing))}pause(){return"recording"!==this.state?this.em.dispatchEvent(error("pause")):(this.state="paused",this.em.dispatchEvent(new Event("pause")))}resume(){return"paused"!==this.state?this.em.dispatchEvent(error("resume")):(this.state="recording",this.em.dispatchEvent(new Event("resume")))}requestData(){return"inactive"===this.state?this.em.dispatchEvent(error("requestData")):this.encoder.postMessage(["dump",context.sampleRate])}addEventListener(...args){this.em.addEventListener(...args)}removeEventListener(...args){this.em.removeEventListener(...args)}dispatchEvent(...args){this.em.dispatchEvent(...args)}}MediaRecorder.prototype.mimeType="audio/wav",MediaRecorder.isTypeSupported=mimeType=>MediaRecorder.prototype.mimeType===mimeType,MediaRecorder.notSupported=!navigator.mediaDevices||!AudioContext,MediaRecorder.encoder=()=>{let recorded=[];onmessage=e=>{"encode"===e.data[0]?function encode(buffer){let length=buffer.length,data=new Uint8Array(2*length);for(let i=0;i<length;i++){let index=2*i,sample=buffer[i];sample>1?sample=1:sample<-1&&(sample=-1),sample*=32768,data[index]=sample,data[index+1]=sample>>8}recorded.push(data)}(e.data[1]):"dump"===e.data[0]&&function dump(sampleRate){let bufferLength=recorded.length?recorded[0].length:0,length=recorded.length*bufferLength,wav=new Uint8Array(44+length),view=new DataView(wav.buffer);view.setUint32(0,1380533830,!1),view.setUint32(4,36+length,!0),view.setUint32(8,1463899717,!1),view.setUint32(12,1718449184,!1),view.setUint32(16,16,!0),view.setUint16(20,1,!0),view.setUint16(22,1,!0),view.setUint32(24,sampleRate,!0),view.setUint32(28,2*sampleRate,!0),view.setUint16(32,2,!0),view.setUint16(34,16,!0),view.setUint32(36,1684108385,!1),view.setUint32(40,length,!0);for(let i=0;i<recorded.length;i++)wav.set(recorded[i],i*bufferLength+44);recorded=[],postMessage(wav.buffer,[wav.buffer])}(e.data[1])}};__webpack_exports__.default=MediaRecorder}}]);